{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#instalacion-servidor-web-nginx","title":"Instalaci\u00f3n servidor web Nginx","text":"<p>Para instalar el servidor nginx en Debian, primero actualizamos los repositorios y despu\u00e9s instalamos el paquete correspondiente:</p> <p>Actualizaremos con el siguiente comando: sudo apt update Instalaremos el paquete con: sudo apt install nginx Comprobamos que nginx se ha instalado y que est\u00e1 funcionando correctamente: </p> <p>Crearemos la carpeta de nuestro sitio web o dominio: </p> <p>Clonamos el siguiente repositorio:  </p> <p>Haremos que el propietario de esta carpeta y todo lo que haya dentro sea el usuario www-data, t\u00edpicamente el usuario del servicio web. </p> <p>Y le daremos los permisos adecuados para que no nos de un error de acceso no autorizado al entrar en el sitio web: </p> <p>Comprobamos que funciona correctamente escribiendo esto: http://IP-maq-virtual Y debe salir esto: </p>"},{"location":"#configuracion-de-servidor-web-nginx","title":"Configuraci\u00f3n de servidor web NGINX","text":"<p>Creamos el siguiente archivo:  Y de contenido escribimos lo siguiente:  Y crearemos un archivo simb\u00f3lico entre este archivo y el de sitios que est\u00e1n habilitados.  Una vez creado el archivo, reiniciamos nginx: </p> <p>Configurar servidor SFTP en Debian Primero instalaremos los repositorios:  Ahora vamos a crear una carpeta en nuestro home: </p> <p>Ahora vamos a crear los certificados de seguridad necesarios para aportar la capa de cifrado a nuestra conexi\u00f3n  </p> <p>Ahora vamos a realizar la configuraci\u00f3n de vsftpd. Se trata, con el editor de texto que m\u00e1s os guste, de editar el archivo de configuraci\u00f3n de este servicio, por ejemplo con nano: sudo nano /etc/vsftpd.conf  Buscaremos las siguientes l\u00edneas del archivo y las eliminaremos: </p> <p>En su lugar a\u00f1adiremos lo siguiente: </p> <p>Guardamos y reiniciamos el servicio: </p> <p>Tras acabar esta configuraci\u00f3n, ya podremos acceder a nuestro servidor mediante un cliente FTP adecuado, como por ejemplo Filezilla Descargamos el cliente FTP en nuestro ordenador. </p> <p>Introducimos los datos necesarios para conectarnos a nuestro servidor FTP en Debian: </p> <p>Nos conectaremos directamente a la carpeta que le hab\u00edamos indicado en el archivo de configuraci\u00f3n /home/rebeca/ftp </p> <p>Una vez conectados, buscamos la carpeta de nuestro ordenador donde hemos descargado un archivo (en la parte izquierda de la pantalla) y en la parte derecha de la pantalla, buscamos la carpeta donde queremos subirla.  </p> <p>Con un doble click o utilizando bot\u00f3n derecho &gt; subir, la subimos al servidor. </p> <p>Vemos desde la consola que la transferencia ha sido correcta: </p>"},{"location":"#redireccion-http-a-https","title":"Redirecci\u00f3n HTTP a HTTPS","text":"<p>Ahora vamos a habilitar HTTPS en tu servidor y redirigir autom\u00e1ticamente las solicitudes HTTP a HTTPS. Generaremos certificados SSL autofirmados que se utilizar\u00e1n para habilitar HTTPS en tu servidor. Pondremos los siguientes comandos: sudo mkdir /etc/ssl/private  </p> <p>Creamos un archivo de par\u00e1metros Diffie-Hellman. Este archivo se usa para mejorar la seguridad de las conexiones SSL/TLS. Ejec\u00fatalo para generar el archivo: </p> <p>Configuramos Nginx para usar SSL. Ahora, necesitas editar el archivo de configuraci\u00f3n de Nginx para habilitar HTTPS. Vamos a modificar el archivo de configuraci\u00f3n del sitio web que creaste previamente en /etc/nginx/sites-available/nombre_web.  Modifica el archivo para incluir bloques de configuraci\u00f3n para HTTPS: </p> <p>Y reiniciamos: sudo systemctl restart nginx</p> <p>Para comprobarlo accede al sitio web a trav\u00e9s de http://nombre_web. Deber\u00edas ser redirigido autom\u00e1ticamente a https://nombre_web.: </p>"}]}